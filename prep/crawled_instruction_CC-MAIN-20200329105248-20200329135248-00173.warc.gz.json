{"file_name": "./CC-MAIN-20200329105248-20200329135248-00173/CC-MAIN-20200329105248-20200329135248-00173.warc.gz", "instructions": "Swipe up from the bottom of the iPhone's screen to open Control Center (on the iPhone X and newer, swipe down from the top right). Press the music playback controls in the top right corner of Control Center. Tap the AirPlay button in the top right of the music controls to reveal all available output sources. Tap Headphones (or iPhone , whichever option is present). Tap the screen or click the Home button to dismiss Control Center.", "url": "https://www.lifewire.com/fix-iphone-headphone-jack-2000273", "index": 0}
{"file_name": "./CC-MAIN-20200329105248-20200329135248-00173/CC-MAIN-20200329105248-20200329135248-00173.warc.gz", "instructions": "Open Control Center . Tap Bluetooth in the top-left group of icons row so that it's not lit up. This disconnects Bluetooth devices from your iPhone. Try your headphones now. With Bluetooth off, the audio should play through your headphones and not any other device.", "url": "https://www.lifewire.com/fix-iphone-headphone-jack-2000273", "index": 1}
{"file_name": "./CC-MAIN-20200329105248-20200329135248-00173/CC-MAIN-20200329105248-20200329135248-00173.warc.gz", "instructions": "Begin playing audio from any app. Open Control Center by swiping up from the bottom (on most iPhone models) or down from the top right (on the iPhone X ). Locate the music controls in the top-right corner of Control Center. Tap them to expand. On this screen, you'll see a list of all compatible AirPlay devices to which you can stream audio. Tap your HomePod (as above, likely named for the room it's placed in). If the music stopped playing, tap the play/pause button to resume. Close Control Center.", "url": "https://www.lifewire.com/homepod-using-airplay-4158880", "index": 0}
{"file_name": "./CC-MAIN-20200329105248-20200329135248-00173/CC-MAIN-20200329105248-20200329135248-00173.warc.gz", "instructions": "Image titled Set Up the Judopay SDK with Android Studio Step 1 1 Download the judo Android SDK. Unzip it once downloaded. Simply go to 'Your apps' in the Developer toolbar, as shown below. Image titled Set Up the Judopay SDK with Android Studio Step 2 2 Download and install Android Studio. For necessary files and installation instructions visit http://developer.android.com/sdk/installing/studio.html Image titled Set Up the Judopay SDK with Android Studio Step 3 3 Begin a new project in Android Studio. Create an application and package name. Set the 'minimum required SDK' to Android 4.0 ICS. All remaining settings can be left as default, or feel free to modify as per your preferences. Image titled Set Up the Judopay SDK with Android Studio Step 4 4 Image titled Set Up the Judopay SDK with Android Studio Step 5 5 Confirm that the 'build.gradle' file is in your SDK library. Open the judo Android SDK directory. If 'build.gradle' is present, skip to Step 5. If it is NOT, generate it manually by following these steps: Download and install Android developer tools. The files and instructions for installation can be found here. Open Eclipse, one of the Android developer tools. Move the Judo library into Eclipse Click 'File' from the toolbar Click 'Import' Click 'Existing Android Code Into Workspace' Click next, choose your Judo library location from your unzipped SDK files and click 'Finish'. Image titled Set Up the Judopay SDK with Android Studio Step 6 6 Create the build.gradle files. Choose 'File' from the toolbar. Click 'Export' Click 'Generate Gradle build files' Click next, choose your judo library location from your unzipped SDK files and click 'Finish' Image titled Set Up the Judopay SDK with Android Studio Step 7 7 Image titled Set Up the Judopay SDK with Android Studio Step 8 8 Add dependencies to your new project. After you have created the build.gradle files, open a new project in Android Studio and add the dependencies. Make a new directory in Android Studio called 'libs' under the root project folder. Image titled Set Up the Judopay SDK with Android Studio Step 9 9 Image titled Set Up the Judopay SDK with Android Studio Step 10 10 Access the unzipped SDK files and copy the 'JudoLibrary' folder to your new 'libs' folder. For this, use Windows Explorer so as to drag the folder directly into Android Studio. Image titled Set Up the Judopay SDK with Android Studio Step 11 11 Image titled Set Up the Judopay SDK with Android Studio Step 12 12 From Android Studio, open 'settings.gradle' and 'build.gradle', found in the JudoPayExample folder. Image titled Set Up the Judopay SDK with Android Studio Step 13 13 Add the below lines of code to the dependencies on build.gradle, making sure that 'JudoPayExample' shows the module name used in project creation: Image titled Set Up the Judopay SDK with Android Studio Step 14 14 Image titled Set Up the Judopay SDK with Android Studio Step 15 15 Plug the following line into 'settings.gradle': ':JudoPayExample:libs:JudoLibrary' Be sure that 'JudoPayExample' shows the module name used in project creation. Image titled Set Up the Judopay SDK with Android Studio Step 16 16 Integrate the judo UI. Open the judo SDK folder JudoExample\\src\\com\\judopay\\android\\example, and copy all files except 'StartActivity.java' into your JudoPayExample folder, found within the Android Studio package folder. Image titled Set Up the Judopay SDK with Android Studio Step 17 17 Image titled Set Up the Judopay SDK with Android Studio Step 18 18 Access the Android manifest from your package explorer and below the default tag, plug in the following, using the unique package name in place of 'judopay': Image titled Set Up the Judopay SDK with Android Studio Step 19 19 Copy \"fragment_container.xml\" from JudoAndroidSDK\\JudoExample\\res\\layout. Right-click the 'layout' directory and paste it to JudoPayExample\\res\\layout. Image titled Set Up the Judopay SDK with Android Studio Step 20 20 Image titled Set Up the Judopay SDK with Android Studio Step 21 21 Swap all instances of StartActivity.class with the name selected when the project was created, or to any process that needs to occur after the following activities. For instance, we used MainActivity.class . SettingsActivity Payment Confirm Activity Receipt Confirm Activity Image titled Set Up the Judopay SDK with Android Studio Step 22 22 Image titled Set Up the Judopay SDK with Android Studio Step 23 23 Well done! You have fully integrated the JudoPay SDK and your Android payment gateway is ready to accept mobile payments. Advertisement", "url": "https://www.wikihow.com/Set-Up-the-Judopay-SDK-with-Android-Studio", "index": 0}
